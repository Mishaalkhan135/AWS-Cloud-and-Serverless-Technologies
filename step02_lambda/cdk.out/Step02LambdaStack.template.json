{
  "Resources": {
    "hellomishaalhandlerServiceRole57E69620": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/hello-mishaal-handler/ServiceRole/Resource"
      }
    },
    "hellomishaalhandler1CD146DB": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "2215138fbddf619ff6388cf5632c8fec1c2c5a82da1b54027ec47aeaa9920983.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "hellomishaalhandlerServiceRole57E69620",
            "Arn"
          ]
        },
        "FunctionName": "lambda-example",
        "Handler": "myNewLambda.handler",
        "Runtime": "nodejs12.x"
      },
      "DependsOn": [
        "hellomishaalhandlerServiceRole57E69620"
      ],
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/hello-mishaal-handler/Resource",
        "aws:asset:path": "asset.2215138fbddf619ff6388cf5632c8fec1c2c5a82da1b54027ec47aeaa9920983",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "myapi15936E87B": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "my-first-api"
      },
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/my-api-1/Resource"
      }
    },
    "myapi1CloudWatchRole0CFE1EC6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/my-api-1/CloudWatchRole/Resource"
      }
    },
    "myapi1AccountEC725042": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "myapi1CloudWatchRole0CFE1EC6",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "myapi15936E87B"
      ],
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/my-api-1/Account"
      }
    },
    "myapi1Deployment40493488bd1d1cd292331056240363ea360450bb": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "myapi15936E87B"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "myapi1bikesGET0F9EEF7A",
        "myapi1bikes51DA97EC",
        "myapi1carsGET8648C675",
        "myapi1carsDE00CD89"
      ],
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/my-api-1/Deployment/Resource"
      }
    },
    "myapi1DeploymentStageprod3E55E144": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "myapi15936E87B"
        },
        "DeploymentId": {
          "Ref": "myapi1Deployment40493488bd1d1cd292331056240363ea360450bb"
        },
        "StageName": "prod"
      },
      "DependsOn": [
        "myapi1AccountEC725042"
      ],
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/my-api-1/DeploymentStage.prod/Resource"
      }
    },
    "myapi1carsDE00CD89": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "myapi15936E87B",
            "RootResourceId"
          ]
        },
        "PathPart": "cars",
        "RestApiId": {
          "Ref": "myapi15936E87B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/my-api-1/Default/cars/Resource"
      }
    },
    "myapi1carsGETApiPermissionStep02LambdaStackmyapi14B8F6407GETcars31DB707A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hellomishaalhandler1CD146DB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapi15936E87B"
              },
              "/",
              {
                "Ref": "myapi1DeploymentStageprod3E55E144"
              },
              "/GET/cars"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/my-api-1/Default/cars/GET/ApiPermission.Step02LambdaStackmyapi14B8F6407.GET..cars"
      }
    },
    "myapi1carsGETApiPermissionTestStep02LambdaStackmyapi14B8F6407GETcars02DFEE51": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hellomishaalhandler1CD146DB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapi15936E87B"
              },
              "/test-invoke-stage/GET/cars"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/my-api-1/Default/cars/GET/ApiPermission.Test.Step02LambdaStackmyapi14B8F6407.GET..cars"
      }
    },
    "myapi1carsGET8648C675": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "myapi1carsDE00CD89"
        },
        "RestApiId": {
          "Ref": "myapi15936E87B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "hellomishaalhandler1CD146DB",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/my-api-1/Default/cars/GET/Resource"
      }
    },
    "myapi1bikes51DA97EC": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "myapi15936E87B",
            "RootResourceId"
          ]
        },
        "PathPart": "bikes",
        "RestApiId": {
          "Ref": "myapi15936E87B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/my-api-1/Default/bikes/Resource"
      }
    },
    "myapi1bikesGETApiPermissionStep02LambdaStackmyapi14B8F6407GETbikesD02A9C7D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hellomishaalhandler1CD146DB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapi15936E87B"
              },
              "/",
              {
                "Ref": "myapi1DeploymentStageprod3E55E144"
              },
              "/GET/bikes"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/my-api-1/Default/bikes/GET/ApiPermission.Step02LambdaStackmyapi14B8F6407.GET..bikes"
      }
    },
    "myapi1bikesGETApiPermissionTestStep02LambdaStackmyapi14B8F6407GETbikes833242F3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hellomishaalhandler1CD146DB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapi15936E87B"
              },
              "/test-invoke-stage/GET/bikes"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/my-api-1/Default/bikes/GET/ApiPermission.Test.Step02LambdaStackmyapi14B8F6407.GET..bikes"
      }
    },
    "myapi1bikesGET0F9EEF7A": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "myapi1bikes51DA97EC"
        },
        "RestApiId": {
          "Ref": "myapi15936E87B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "hellomishaalhandler1CD146DB",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/my-api-1/Default/bikes/GET/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WP0U7DMAxFv2XvqaGAkHjshngCgcoHTFliitcmqWqHaar67yQpiPHkc21dX/sG6ju43ugTV8b21UAHmN9Fm16l1n4etDtYDfNT9EYoeLX78Jf8hpMj5qQWRdrB3IYB8yDXRfHtXjOjMDS5JA3baHqUrWZUeqROC570GebnEtQiSzNSWfCHjTEhelGPOA7h7DBh6l6odHBXUldI1hAngyXkV/zsXPkF5TPY3FppWVQ5MPvJd3nwGmWM8s+VeBe8JSnv+mARjnz1Vd/DA9SbIxNVU7qTHEK71m8cv0Y4XgEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "Step02LambdaStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "myapi1Endpoint31CB8CD7": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "myapi15936E87B"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "myapi1DeploymentStageprod3E55E144"
            },
            "/"
          ]
        ]
      }
    },
    "apiurloutput": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "myapi15936E87B"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "myapi1DeploymentStageprod3E55E144"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}